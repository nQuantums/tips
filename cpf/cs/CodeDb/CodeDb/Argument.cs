using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

namespace CodeDb {
	/// <summary>
	/// コマンドに対する引数として扱う事をマークするためのオブジェクト
	/// </summary>
	public class Argument {
		public object Value { get; set; }

		public Argument(object value) {
			this.Value = value;
		}

		public override string ToString() {
			var value = this.Value;
			if (value == null) {
				return "null";
			} else {
				return value.ToString();
			}
		}

		public override bool Equals(object obj) {
			return object.ReferenceEquals(this, obj);
		}

		public override int GetHashCode() {
			var value = this.Value;
			return value != null ? value.GetHashCode() : 0;
		}

		// 明示的キャスト
		public static bool operator true(Argument variable) => !(variable is null);
		public static bool operator false(Argument variable) => variable is null;

		// 暗黙的キャスト
		public static implicit operator bool(Argument variable) => (bool)variable.Value;
		public static implicit operator bool?(Argument variable) => (bool?)variable.Value;
		public static implicit operator char(Argument variable) => (char)variable.Value;
		public static implicit operator char?(Argument variable) => (char?)variable.Value;
		public static implicit operator int(Argument variable) => (int)variable.Value;
		public static implicit operator int?(Argument variable) => (int?)variable.Value;
		public static implicit operator long(Argument variable) => (long)variable.Value;
		public static implicit operator long?(Argument variable) => (long?)variable.Value;
		public static implicit operator double(Argument variable) => (double)variable.Value;
		public static implicit operator double?(Argument variable) => (double?)variable.Value;
		public static implicit operator string(Argument variable) => (string)variable.Value;
		public static implicit operator Guid(Argument variable) => (Guid)variable.Value;
		public static implicit operator Guid?(Argument variable) => (Guid?)variable.Value;
		public static implicit operator DateTime(Argument variable) => (DateTime)variable.Value;
		public static implicit operator DateTime?(Argument variable) => (DateTime?)variable.Value;

		// 配列としてアクセス
		public Argument this[int index] {
			get {
				return default(Argument);
			}
		}

		// 以下演算子オーバーロード
		public static bool operator +(bool l, Argument r) => default(bool);
		public static bool operator +(Argument l, bool r) => default(bool);
		public static bool? operator +(bool? l, Argument r) => default(bool?);
		public static bool? operator +(Argument l, bool? r) => default(bool?);
		public static char operator +(char l, Argument r) => default(char);
		public static char operator +(Argument l, char r) => default(char);
		public static char? operator +(char? l, Argument r) => default(char?);
		public static char? operator +(Argument l, char? r) => default(char?);
		public static int operator +(int l, Argument r) => default(int);
		public static int operator +(Argument l, int r) => default(int);
		public static int? operator +(int? l, Argument r) => default(int?);
		public static int? operator +(Argument l, int? r) => default(int?);
		public static long operator +(long l, Argument r) => default(long);
		public static long operator +(Argument l, long r) => default(long);
		public static long? operator +(long? l, Argument r) => default(long?);
		public static long? operator +(Argument l, long? r) => default(long?);
		public static double operator +(double l, Argument r) => default(double);
		public static double operator +(Argument l, double r) => default(double);
		public static double? operator +(double? l, Argument r) => default(double?);
		public static double? operator +(Argument l, double? r) => default(double?);
		public static string operator +(string l, Argument r) => default(string);
		public static string operator +(Argument l, string r) => default(string);
		public static Guid operator +(Guid l, Argument r) => default(Guid);
		public static Guid operator +(Argument l, Guid r) => default(Guid);
		public static Guid? operator +(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator +(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator +(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator +(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator +(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator +(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator +(Argument l, Argument r) => default(Argument);
		public static bool operator -(bool l, Argument r) => default(bool);
		public static bool operator -(Argument l, bool r) => default(bool);
		public static bool? operator -(bool? l, Argument r) => default(bool?);
		public static bool? operator -(Argument l, bool? r) => default(bool?);
		public static char operator -(char l, Argument r) => default(char);
		public static char operator -(Argument l, char r) => default(char);
		public static char? operator -(char? l, Argument r) => default(char?);
		public static char? operator -(Argument l, char? r) => default(char?);
		public static int operator -(int l, Argument r) => default(int);
		public static int operator -(Argument l, int r) => default(int);
		public static int? operator -(int? l, Argument r) => default(int?);
		public static int? operator -(Argument l, int? r) => default(int?);
		public static long operator -(long l, Argument r) => default(long);
		public static long operator -(Argument l, long r) => default(long);
		public static long? operator -(long? l, Argument r) => default(long?);
		public static long? operator -(Argument l, long? r) => default(long?);
		public static double operator -(double l, Argument r) => default(double);
		public static double operator -(Argument l, double r) => default(double);
		public static double? operator -(double? l, Argument r) => default(double?);
		public static double? operator -(Argument l, double? r) => default(double?);
		public static string operator -(string l, Argument r) => default(string);
		public static string operator -(Argument l, string r) => default(string);
		public static Guid operator -(Guid l, Argument r) => default(Guid);
		public static Guid operator -(Argument l, Guid r) => default(Guid);
		public static Guid? operator -(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator -(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator -(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator -(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator -(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator -(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator -(Argument l, Argument r) => default(Argument);
		public static bool operator *(bool l, Argument r) => default(bool);
		public static bool operator *(Argument l, bool r) => default(bool);
		public static bool? operator *(bool? l, Argument r) => default(bool?);
		public static bool? operator *(Argument l, bool? r) => default(bool?);
		public static char operator *(char l, Argument r) => default(char);
		public static char operator *(Argument l, char r) => default(char);
		public static char? operator *(char? l, Argument r) => default(char?);
		public static char? operator *(Argument l, char? r) => default(char?);
		public static int operator *(int l, Argument r) => default(int);
		public static int operator *(Argument l, int r) => default(int);
		public static int? operator *(int? l, Argument r) => default(int?);
		public static int? operator *(Argument l, int? r) => default(int?);
		public static long operator *(long l, Argument r) => default(long);
		public static long operator *(Argument l, long r) => default(long);
		public static long? operator *(long? l, Argument r) => default(long?);
		public static long? operator *(Argument l, long? r) => default(long?);
		public static double operator *(double l, Argument r) => default(double);
		public static double operator *(Argument l, double r) => default(double);
		public static double? operator *(double? l, Argument r) => default(double?);
		public static double? operator *(Argument l, double? r) => default(double?);
		public static string operator *(string l, Argument r) => default(string);
		public static string operator *(Argument l, string r) => default(string);
		public static Guid operator *(Guid l, Argument r) => default(Guid);
		public static Guid operator *(Argument l, Guid r) => default(Guid);
		public static Guid? operator *(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator *(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator *(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator *(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator *(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator *(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator *(Argument l, Argument r) => default(Argument);
		public static bool operator /(bool l, Argument r) => default(bool);
		public static bool operator /(Argument l, bool r) => default(bool);
		public static bool? operator /(bool? l, Argument r) => default(bool?);
		public static bool? operator /(Argument l, bool? r) => default(bool?);
		public static char operator /(char l, Argument r) => default(char);
		public static char operator /(Argument l, char r) => default(char);
		public static char? operator /(char? l, Argument r) => default(char?);
		public static char? operator /(Argument l, char? r) => default(char?);
		public static int operator /(int l, Argument r) => default(int);
		public static int operator /(Argument l, int r) => default(int);
		public static int? operator /(int? l, Argument r) => default(int?);
		public static int? operator /(Argument l, int? r) => default(int?);
		public static long operator /(long l, Argument r) => default(long);
		public static long operator /(Argument l, long r) => default(long);
		public static long? operator /(long? l, Argument r) => default(long?);
		public static long? operator /(Argument l, long? r) => default(long?);
		public static double operator /(double l, Argument r) => default(double);
		public static double operator /(Argument l, double r) => default(double);
		public static double? operator /(double? l, Argument r) => default(double?);
		public static double? operator /(Argument l, double? r) => default(double?);
		public static string operator /(string l, Argument r) => default(string);
		public static string operator /(Argument l, string r) => default(string);
		public static Guid operator /(Guid l, Argument r) => default(Guid);
		public static Guid operator /(Argument l, Guid r) => default(Guid);
		public static Guid? operator /(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator /(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator /(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator /(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator /(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator /(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator /(Argument l, Argument r) => default(Argument);
		public static bool operator <(bool l, Argument r) => default(bool);
		public static bool operator <(Argument l, bool r) => default(bool);
		public static bool operator <(bool? l, Argument r) => default(bool);
		public static bool operator <(Argument l, bool? r) => default(bool);
		public static bool operator <(char l, Argument r) => default(bool);
		public static bool operator <(Argument l, char r) => default(bool);
		public static bool operator <(char? l, Argument r) => default(bool);
		public static bool operator <(Argument l, char? r) => default(bool);
		public static bool operator <(int l, Argument r) => default(bool);
		public static bool operator <(Argument l, int r) => default(bool);
		public static bool operator <(int? l, Argument r) => default(bool);
		public static bool operator <(Argument l, int? r) => default(bool);
		public static bool operator <(long l, Argument r) => default(bool);
		public static bool operator <(Argument l, long r) => default(bool);
		public static bool operator <(long? l, Argument r) => default(bool);
		public static bool operator <(Argument l, long? r) => default(bool);
		public static bool operator <(double l, Argument r) => default(bool);
		public static bool operator <(Argument l, double r) => default(bool);
		public static bool operator <(double? l, Argument r) => default(bool);
		public static bool operator <(Argument l, double? r) => default(bool);
		public static bool operator <(string l, Argument r) => default(bool);
		public static bool operator <(Argument l, string r) => default(bool);
		public static bool operator <(Guid l, Argument r) => default(bool);
		public static bool operator <(Argument l, Guid r) => default(bool);
		public static bool operator <(Guid? l, Argument r) => default(bool);
		public static bool operator <(Argument l, Guid? r) => default(bool);
		public static bool operator <(DateTime l, Argument r) => default(bool);
		public static bool operator <(Argument l, DateTime r) => default(bool);
		public static bool operator <(DateTime? l, Argument r) => default(bool);
		public static bool operator <(Argument l, DateTime? r) => default(bool);
		public static bool operator <(Argument l, Argument r) => default(bool);
		public static bool operator >(bool l, Argument r) => default(bool);
		public static bool operator >(Argument l, bool r) => default(bool);
		public static bool operator >(bool? l, Argument r) => default(bool);
		public static bool operator >(Argument l, bool? r) => default(bool);
		public static bool operator >(char l, Argument r) => default(bool);
		public static bool operator >(Argument l, char r) => default(bool);
		public static bool operator >(char? l, Argument r) => default(bool);
		public static bool operator >(Argument l, char? r) => default(bool);
		public static bool operator >(int l, Argument r) => default(bool);
		public static bool operator >(Argument l, int r) => default(bool);
		public static bool operator >(int? l, Argument r) => default(bool);
		public static bool operator >(Argument l, int? r) => default(bool);
		public static bool operator >(long l, Argument r) => default(bool);
		public static bool operator >(Argument l, long r) => default(bool);
		public static bool operator >(long? l, Argument r) => default(bool);
		public static bool operator >(Argument l, long? r) => default(bool);
		public static bool operator >(double l, Argument r) => default(bool);
		public static bool operator >(Argument l, double r) => default(bool);
		public static bool operator >(double? l, Argument r) => default(bool);
		public static bool operator >(Argument l, double? r) => default(bool);
		public static bool operator >(string l, Argument r) => default(bool);
		public static bool operator >(Argument l, string r) => default(bool);
		public static bool operator >(Guid l, Argument r) => default(bool);
		public static bool operator >(Argument l, Guid r) => default(bool);
		public static bool operator >(Guid? l, Argument r) => default(bool);
		public static bool operator >(Argument l, Guid? r) => default(bool);
		public static bool operator >(DateTime l, Argument r) => default(bool);
		public static bool operator >(Argument l, DateTime r) => default(bool);
		public static bool operator >(DateTime? l, Argument r) => default(bool);
		public static bool operator >(Argument l, DateTime? r) => default(bool);
		public static bool operator >(Argument l, Argument r) => default(bool);
		public static bool operator <=(bool l, Argument r) => default(bool);
		public static bool operator <=(Argument l, bool r) => default(bool);
		public static bool operator <=(bool? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, bool? r) => default(bool);
		public static bool operator <=(char l, Argument r) => default(bool);
		public static bool operator <=(Argument l, char r) => default(bool);
		public static bool operator <=(char? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, char? r) => default(bool);
		public static bool operator <=(int l, Argument r) => default(bool);
		public static bool operator <=(Argument l, int r) => default(bool);
		public static bool operator <=(int? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, int? r) => default(bool);
		public static bool operator <=(long l, Argument r) => default(bool);
		public static bool operator <=(Argument l, long r) => default(bool);
		public static bool operator <=(long? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, long? r) => default(bool);
		public static bool operator <=(double l, Argument r) => default(bool);
		public static bool operator <=(Argument l, double r) => default(bool);
		public static bool operator <=(double? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, double? r) => default(bool);
		public static bool operator <=(string l, Argument r) => default(bool);
		public static bool operator <=(Argument l, string r) => default(bool);
		public static bool operator <=(Guid l, Argument r) => default(bool);
		public static bool operator <=(Argument l, Guid r) => default(bool);
		public static bool operator <=(Guid? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, Guid? r) => default(bool);
		public static bool operator <=(DateTime l, Argument r) => default(bool);
		public static bool operator <=(Argument l, DateTime r) => default(bool);
		public static bool operator <=(DateTime? l, Argument r) => default(bool);
		public static bool operator <=(Argument l, DateTime? r) => default(bool);
		public static bool operator <=(Argument l, Argument r) => default(bool);
		public static bool operator >=(bool l, Argument r) => default(bool);
		public static bool operator >=(Argument l, bool r) => default(bool);
		public static bool operator >=(bool? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, bool? r) => default(bool);
		public static bool operator >=(char l, Argument r) => default(bool);
		public static bool operator >=(Argument l, char r) => default(bool);
		public static bool operator >=(char? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, char? r) => default(bool);
		public static bool operator >=(int l, Argument r) => default(bool);
		public static bool operator >=(Argument l, int r) => default(bool);
		public static bool operator >=(int? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, int? r) => default(bool);
		public static bool operator >=(long l, Argument r) => default(bool);
		public static bool operator >=(Argument l, long r) => default(bool);
		public static bool operator >=(long? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, long? r) => default(bool);
		public static bool operator >=(double l, Argument r) => default(bool);
		public static bool operator >=(Argument l, double r) => default(bool);
		public static bool operator >=(double? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, double? r) => default(bool);
		public static bool operator >=(string l, Argument r) => default(bool);
		public static bool operator >=(Argument l, string r) => default(bool);
		public static bool operator >=(Guid l, Argument r) => default(bool);
		public static bool operator >=(Argument l, Guid r) => default(bool);
		public static bool operator >=(Guid? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, Guid? r) => default(bool);
		public static bool operator >=(DateTime l, Argument r) => default(bool);
		public static bool operator >=(Argument l, DateTime r) => default(bool);
		public static bool operator >=(DateTime? l, Argument r) => default(bool);
		public static bool operator >=(Argument l, DateTime? r) => default(bool);
		public static bool operator >=(Argument l, Argument r) => default(bool);
		public static bool operator ==(bool l, Argument r) => default(bool);
		public static bool operator ==(Argument l, bool r) => default(bool);
		public static bool operator ==(bool? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, bool? r) => default(bool);
		public static bool operator ==(char l, Argument r) => default(bool);
		public static bool operator ==(Argument l, char r) => default(bool);
		public static bool operator ==(char? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, char? r) => default(bool);
		public static bool operator ==(int l, Argument r) => default(bool);
		public static bool operator ==(Argument l, int r) => default(bool);
		public static bool operator ==(int? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, int? r) => default(bool);
		public static bool operator ==(long l, Argument r) => default(bool);
		public static bool operator ==(Argument l, long r) => default(bool);
		public static bool operator ==(long? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, long? r) => default(bool);
		public static bool operator ==(double l, Argument r) => default(bool);
		public static bool operator ==(Argument l, double r) => default(bool);
		public static bool operator ==(double? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, double? r) => default(bool);
		public static bool operator ==(string l, Argument r) => default(bool);
		public static bool operator ==(Argument l, string r) => default(bool);
		public static bool operator ==(Guid l, Argument r) => default(bool);
		public static bool operator ==(Argument l, Guid r) => default(bool);
		public static bool operator ==(Guid? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, Guid? r) => default(bool);
		public static bool operator ==(DateTime l, Argument r) => default(bool);
		public static bool operator ==(Argument l, DateTime r) => default(bool);
		public static bool operator ==(DateTime? l, Argument r) => default(bool);
		public static bool operator ==(Argument l, DateTime? r) => default(bool);
		public static bool operator ==(Argument l, Argument r) => default(bool);
		public static bool operator !=(bool l, Argument r) => default(bool);
		public static bool operator !=(Argument l, bool r) => default(bool);
		public static bool operator !=(bool? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, bool? r) => default(bool);
		public static bool operator !=(char l, Argument r) => default(bool);
		public static bool operator !=(Argument l, char r) => default(bool);
		public static bool operator !=(char? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, char? r) => default(bool);
		public static bool operator !=(int l, Argument r) => default(bool);
		public static bool operator !=(Argument l, int r) => default(bool);
		public static bool operator !=(int? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, int? r) => default(bool);
		public static bool operator !=(long l, Argument r) => default(bool);
		public static bool operator !=(Argument l, long r) => default(bool);
		public static bool operator !=(long? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, long? r) => default(bool);
		public static bool operator !=(double l, Argument r) => default(bool);
		public static bool operator !=(Argument l, double r) => default(bool);
		public static bool operator !=(double? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, double? r) => default(bool);
		public static bool operator !=(string l, Argument r) => default(bool);
		public static bool operator !=(Argument l, string r) => default(bool);
		public static bool operator !=(Guid l, Argument r) => default(bool);
		public static bool operator !=(Argument l, Guid r) => default(bool);
		public static bool operator !=(Guid? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, Guid? r) => default(bool);
		public static bool operator !=(DateTime l, Argument r) => default(bool);
		public static bool operator !=(Argument l, DateTime r) => default(bool);
		public static bool operator !=(DateTime? l, Argument r) => default(bool);
		public static bool operator !=(Argument l, DateTime? r) => default(bool);
		public static bool operator !=(Argument l, Argument r) => default(bool);
		public static bool operator |(bool l, Argument r) => default(bool);
		public static bool operator |(Argument l, bool r) => default(bool);
		public static bool? operator |(bool? l, Argument r) => default(bool?);
		public static bool? operator |(Argument l, bool? r) => default(bool?);
		public static char operator |(char l, Argument r) => default(char);
		public static char operator |(Argument l, char r) => default(char);
		public static char? operator |(char? l, Argument r) => default(char?);
		public static char? operator |(Argument l, char? r) => default(char?);
		public static int operator |(int l, Argument r) => default(int);
		public static int operator |(Argument l, int r) => default(int);
		public static int? operator |(int? l, Argument r) => default(int?);
		public static int? operator |(Argument l, int? r) => default(int?);
		public static long operator |(long l, Argument r) => default(long);
		public static long operator |(Argument l, long r) => default(long);
		public static long? operator |(long? l, Argument r) => default(long?);
		public static long? operator |(Argument l, long? r) => default(long?);
		public static double operator |(double l, Argument r) => default(double);
		public static double operator |(Argument l, double r) => default(double);
		public static double? operator |(double? l, Argument r) => default(double?);
		public static double? operator |(Argument l, double? r) => default(double?);
		public static string operator |(string l, Argument r) => default(string);
		public static string operator |(Argument l, string r) => default(string);
		public static Guid operator |(Guid l, Argument r) => default(Guid);
		public static Guid operator |(Argument l, Guid r) => default(Guid);
		public static Guid? operator |(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator |(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator |(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator |(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator |(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator |(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator |(Argument l, Argument r) => default(Argument);
		public static bool operator &(bool l, Argument r) => default(bool);
		public static bool operator &(Argument l, bool r) => default(bool);
		public static bool? operator &(bool? l, Argument r) => default(bool?);
		public static bool? operator &(Argument l, bool? r) => default(bool?);
		public static char operator &(char l, Argument r) => default(char);
		public static char operator &(Argument l, char r) => default(char);
		public static char? operator &(char? l, Argument r) => default(char?);
		public static char? operator &(Argument l, char? r) => default(char?);
		public static int operator &(int l, Argument r) => default(int);
		public static int operator &(Argument l, int r) => default(int);
		public static int? operator &(int? l, Argument r) => default(int?);
		public static int? operator &(Argument l, int? r) => default(int?);
		public static long operator &(long l, Argument r) => default(long);
		public static long operator &(Argument l, long r) => default(long);
		public static long? operator &(long? l, Argument r) => default(long?);
		public static long? operator &(Argument l, long? r) => default(long?);
		public static double operator &(double l, Argument r) => default(double);
		public static double operator &(Argument l, double r) => default(double);
		public static double? operator &(double? l, Argument r) => default(double?);
		public static double? operator &(Argument l, double? r) => default(double?);
		public static string operator &(string l, Argument r) => default(string);
		public static string operator &(Argument l, string r) => default(string);
		public static Guid operator &(Guid l, Argument r) => default(Guid);
		public static Guid operator &(Argument l, Guid r) => default(Guid);
		public static Guid? operator &(Guid? l, Argument r) => default(Guid?);
		public static Guid? operator &(Argument l, Guid? r) => default(Guid?);
		public static DateTime operator &(DateTime l, Argument r) => default(DateTime);
		public static DateTime operator &(Argument l, DateTime r) => default(DateTime);
		public static DateTime? operator &(DateTime? l, Argument r) => default(DateTime?);
		public static DateTime? operator &(Argument l, DateTime? r) => default(DateTime?);
		public static Argument operator &(Argument l, Argument r) => default(Argument);
		public static bool operator !(Argument op) => op is null;
	}
}
